;4-	Hacer un programa que dado el ARReglo en las seLAZO3ión de datos.
;.DATA ARR   DWORD 1235,1456,45,987,357,159,4567,120
;NUEVOARR   DWORS  LENGHTOF ARR DUP(0)
;Encuentre el número NUM_MENOR y NUM_MAYOR del ARReglo, luego divida el NUM_MAYOR por el NUM_MENOR y muestre su resultado. 
;El cociente multiplicarlo por cada uno de los elementos del ARReglo y Hacer un muevo ARReglo.

TITLE EJERCICIO4_PARCIAL2
INCLUDE IRVINE32.INC 
.DATA
	ARR DWORD 1235,1456,45,987,357,159,4567,120
	NUEVOARR DWORD  LENGTHOF ARR DUP(0)
	NUM_MAYOR DWORD 0
	NUM_MENOR DWORD 0
	MESSAGE1 BYTE "COCIENTE: ", 0
	MESSAGE2 BYTE "NUEVO ARRAY: ", 0
	MINUS  BYTE "EL NUMERO MENOR: ", 0
	HIGHER BYTE "EL NUMMERO MAYOR ES: ",0
.CODE
	MMM PROC
		MOV ECX, LENGTHOF ARR
		MOV ESI, OFFSET ARR
		
		MOV NUM_MAYOR, 0
		MOV NUM_MENOR, 0FFFFFFFFH
		
		LAZO:
			MOV EAX, [ESI]
			.IF(EAX>NUM_MAYOR)
				MOV NUM_MAYOR, EAX
			.ENDIF
			.IF(EAX<NUM_MENOR)
				MOV NUM_MENOR, EAX
			.ENDIF
			add ESI, TYPE ARR
		LOOP LAZO
		CALL CRLF
		;MOSTRANDO EL NUM_MENOR
		MOV EAX, 0
		MOV EAX, NUM_MENOR
		MOV EDX, OFFSET MINUS
		CALL WRITESTRING 
		CALL WRITEDEC
		CALL CRLF
		CALL CRLF
		;MOSTRANDO EL NUM_MAYOR
		MOV EAX, 0
		MOV EAX, NUM_MAYOR
		MOV EDX, OFFSET HIGHER
		CALL WRITESTRING 
		CALL WRITEDEC
		CALL CRLF
		CALL CRLF
		;
		MOV EAX, 0
		MOV EAX, NUM_MAYOR
		MOV EBX, NUM_MENOR
		MOV EDX, 0
		div EBX
		MOV ECX, 0
		MOV EDX, 0
		MOV EDX, OFFSET MESSAGE1
		CALL WRITESTRING
		MOV EDX, 0
		CALL WRITEDEC
		CALL CRLF
		CALL CRLF
		MOV EBX, EAX
		
		MOV ECX, LENGTHOF ARR
		MOV ESI, OFFSET ARR
		MOV EDX, LENGTHOF NUEVOARR
		MOV EDI, OFFSET NUEVOARR
		
		LAZO2:
			MOV EAX, [ESI]
			mul EBX
			MOV [EDI], EAX
			MOV EAX, 0
			MOV EAX, [EDI]
			add ESI, TYPE ARR
			add EDI, TYPE NUEVOARR
		LOOP LAZO2
		
		MOV ECX, LENGTHOF NUEVOARR
		MOV ESI, OFFSET NUEVOARR
		
		MOV EDX, OFFSET MESSAGE2
		CALL WRITESTRING
		CALL CRLF
		MOV EDX, 0
		
		LAZO3:
			MOV EAX, 0
			MOV EAX, [ESI]
			CALL WRITEDEC
			add ESI, TYPE NUEVOARR
			CALL CRLF
		LOOP LAZO3
	EXIT 
	MMM ENDP
	END MMM